/* automatically generated by rust-bindgen */

pub type errcode_t = ::libc::c_long;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_error_table {
    pub msgs: *const *const ::libc::c_char,
    pub base: ::libc::c_long,
    pub n_msgs: ::libc::c_int,
}
impl ::std::clone::Clone for Struct_error_table {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_error_table {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub enum Struct_et_list { }
#[link(name = "krb5")]
#[link(name = "k5crypto")]
#[link(name = "com_err")]
extern "C" {
    pub static mut com_err_hook:
               ::std::option::Option<unsafe extern "C" fn(arg1:
                                                              *const ::libc::c_char,
                                                          arg2:
                                                              ::libc::c_long,
                                                          arg3:
                                                              *const ::libc::c_char,
                                                          arg4: va_list)
                                         -> ()>;
}
#[link(name = "krb5")]
#[link(name = "k5crypto")]
#[link(name = "com_err")]
extern "C" {
    pub fn com_err(arg1: *const ::libc::c_char, arg2: ::libc::c_long,
                   arg3: *const ::libc::c_char, ...) -> ();
    pub fn com_err_va(whoami: *const ::libc::c_char, code: errcode_t,
                      fmt: *const ::libc::c_char, args: va_list) -> ();
    pub fn error_message(arg1: ::libc::c_long) -> *const ::libc::c_char;
    pub fn set_com_err_hook(arg1:
                                ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                               *const ::libc::c_char,
                                                                           arg2:
                                                                               ::libc::c_long,
                                                                           arg3:
                                                                               *const ::libc::c_char,
                                                                           arg4:
                                                                               va_list)
                                                          -> ()>)
     ->
         ::std::option::Option<extern "C" fn(arg1:
                                                 ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                *const ::libc::c_char,
                                                                                            arg2:
                                                                                                ::libc::c_long,
                                                                                            arg3:
                                                                                                *const ::libc::c_char,
                                                                                            arg4:
                                                                                                va_list)
                                                                           ->
                                                                               ()>)
                                   -> ()>;
    pub fn reset_com_err_hook()
     -> ::std::option::Option<extern "C" fn() -> ()>;
    pub fn init_error_table(msgs: *const *const ::libc::c_char,
                            base: ::libc::c_long, count: ::libc::c_int)
     -> ::libc::c_int;
    pub fn set_com_err_gettext(arg1:
                                   ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                  *const ::libc::c_char)
                                                             ->
                                                                 *mut ::libc::c_char>)
     ->
         ::std::option::Option<extern "C" fn(arg1:
                                                 ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                                                *const ::libc::c_char)
                                                                           ->
                                                                               *mut ::libc::c_char>)
                                   -> *mut ::libc::c_char>;
    pub fn add_error_table(et: *const Struct_error_table) -> errcode_t;
    pub fn remove_error_table(et: *const Struct_error_table) -> errcode_t;
    pub fn add_to_error_table(new_table: *mut Struct_et_list) -> ();
    pub fn com_right(list: *mut Struct_et_list, code: ::libc::c_long)
     -> *const ::libc::c_char;
    pub fn com_right_r(list: *mut Struct_et_list, code: ::libc::c_long,
                       str: *mut ::libc::c_char, len: size_t)
     -> *const ::libc::c_char;
    pub fn initialize_error_table_r(list: *mut *mut Struct_et_list,
                                    messages: *mut *const ::libc::c_char,
                                    num_errors: ::libc::c_int,
                                    base: ::libc::c_long) -> ();
    pub fn free_error_table(et: *mut Struct_et_list) -> ();
    pub fn et_list_lock() -> ::libc::c_int;
    pub fn et_list_unlock() -> ::libc::c_int;
}
